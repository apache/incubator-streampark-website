(self.webpackChunkapache_streampark_website=self.webpackChunkapache_streampark_website||[]).push([[6535],{63958:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=t(86070),i=t(76113),a=t(41836);const o={id:"config",title:"Project Configuration",sidebar_position:2,language:"zh-CN"},s=void 0,l={id:"framework/config",title:"Project Configuration",description:"Configuration is very important in StreamPark.",source:"@site/docs/framework/2.conf.md",sourceDirName:"framework",slug:"/framework/config",permalink:"/docs/framework/config",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/incubator-streampark-website/edit/dev/docs/framework/2.conf.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"config",title:"Project Configuration",sidebar_position:2,language:"zh-CN"},sidebar:"tutorialSidebar",previous:{title:"Programming Paradigm",permalink:"/docs/framework/dev-model"},next:{title:"Quick Start",permalink:"/docs/framework/quick-start"}},c={},d=[{value:"Why do I need to configure",id:"why-do-i-need-to-configure",level:2},{value:"Terms",id:"terms",level:2},{value:"Configuration file",id:"configuration-file",level:2},{value:"Deployment",id:"deployment",level:3},{value:"option",id:"option",level:4},{value:"property",id:"property",level:4},{value:"Basic parameters",id:"basic-parameters",level:5},{value:"Memory parameters",id:"memory-parameters",level:5},{value:"Configure Total Memory",id:"configure-total-memory",level:5},{value:"Checkpoint",id:"checkpoint",level:3},{value:"Watermark",id:"watermark",level:3},{value:"State",id:"state",level:3},{value:"backend",id:"backend",level:4},{value:"Restart Strategy",id:"restart-strategy",level:3},{value:"fixed-delay",id:"fixed-delay",level:4},{value:"failure-rate",id:"failure-rate",level:4},{value:"None",id:"none",level:4},{value:"Unit suffix",id:"unit-suffix",level:4},{value:"Table",id:"table",level:3},{value:"Sql file",id:"sql-file",level:2},{value:"Summary",id:"summary",level:2}];function m(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Configuration is very important in ",(0,r.jsx)(n.code,{children:"StreamPark"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"why-do-i-need-to-configure",children:"Why do I need to configure"}),"\n",(0,r.jsxs)(n.p,{children:["It takes about 4 steps to create a ",(0,r.jsx)(n.code,{children:"DataStream"})," program."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"StreamexEcutionEnvironment initial and configured"}),"\n",(0,r.jsx)(n.li,{children:"Create source"}),"\n",(0,r.jsx)(n.li,{children:"Create transformation"}),"\n",(0,r.jsx)(n.li,{children:"Create sink"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(94325).A+"",width:"1070",height:"243"})}),"\n",(0,r.jsx)(n.p,{children:"When developing 'datastream' programs, we need to initialize 'environment' and configure relevant parameters. Generally, we should initialize 'environment' and configure relevant parameters in the first step. The configuration parameters include the following categories:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Parallelism"}),"\n",(0,r.jsx)(n.li,{children:"TimeCharacteristic"}),"\n",(0,r.jsx)(n.li,{children:"checkpoint"}),"\n",(0,r.jsx)(n.li,{children:"Watermark"}),"\n",(0,r.jsx)(n.li,{children:"State Backend"}),"\n",(0,r.jsx)(n.li,{children:"Restart Strategy"}),"\n",(0,r.jsx)(n.li,{children:"Other..."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The above configurations are basically general, which is a repetitive work to be done in the first step."}),"\n",(0,r.jsx)(n.p,{children:"Submit the program as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"flink run -m yarn-cluster -p 1 -c com.xx.Main job.jar\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You need to set a series of environment parameters when developing the ",(0,r.jsx)(n.code,{children:"Flink Sql"})," program. In addition, the following is an example of using pure SQL to develop the program."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:"title= Flinksql task for Java code development",children:'\nimport org.apache.flink.table.api.EnvironmentSettings;\nimport org.apache.flink.table.api.Table;\nimport org.apache.flink.table.api.TableEnvironment;\n\npublic class JavaTableApp {\n\n    public static void main(String[] args) {\n        EnvironmentSettings bbSettings = EnvironmentSettings\n        .newInstance()\n        .useBlinkPlanner()\n        .build();\n\n        TableEnvironment bsTableEnv = TableEnvironment.create(bbSettings);\n\n        String sourceDDL = "CREATE TABLE datagen (  " +\n                " f_random INT,  " +\n                " f_random_str STRING,  " +\n                " ts AS localtimestamp,  " +\n                " WATERMARK FOR ts AS ts  " +\n                ") WITH (  " +\n                " \'connector\' = \'datagen\',  " +\n                " \'rows-per-second\'=\'10\',  " +\n                " \'fields.f_random.min\'=\'1\',  " +\n                " \'fields.f_random.max\'=\'5\',  " +\n                " \'fields.f_random_str.length\'=\'10\'  " +\n                ")";\n\n        bsTableEnv.executeSql(sourceDDL);\n\n        String sinkDDL = "CREATE TABLE print_table (" +\n                " f_random int," +\n                " c_val bigint, " +\n                " wStart TIMESTAMP(3) " +\n                ") WITH (\'connector\' = \'print\') ";\n\n        bsTableEnv.executeSql(sinkDDL);\n    }\n\n}\n\n'})}),"\n",(0,r.jsx)(n.p,{children:"In addition to setting the 'environmentsettings' parameter, most of the remaining code is spliced with SQL in Java. If the business is very complex, it will be difficult to maintain."}),"\n",(0,r.jsx)(n.p,{children:"A simpler method should be used, such as simplifying some environment initialization parameters and startup parameters in the 'datastream' and 'Flink SQL' tasks. For the 'Flink SQL' job, it is better not to write a single line of code, nor write large pieces of SQL in the code. Can it be solved in a more elegant way?"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Absolutely"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"StreamPark"})," proposes the concept of unified program configuration, which is generated by configuring a series of parameters from development to deployment in the ",(0,r.jsx)(n.code,{children:"application.yml"}),"according to a specific format a general configuration template, so that the initialization of the environment can be completed by transferring the configuration of the project to the program when the program is started. This is the concept of ",(0,r.jsx)(n.code,{children:"configuration file"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"StreamPark"})," provides a higher level of abstraction for the ",(0,r.jsx)(n.code,{children:"Flink SQL"}),", developers only need to define SQL to ",(0,r.jsx)(n.code,{children:"sql.yaml"}),", when the program is started, the ",(0,r.jsx)(n.code,{children:"sql.yaml"})," is transferred to the main program, and the SQL will be automatically loaded and executed. This is the concept of ",(0,r.jsx)(n.code,{children:"sql file"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"terms",children:"Terms"}),"\n",(0,r.jsxs)(n.p,{children:["In order to better understand and communicate with each other, we configure a series of parameters of the program from development to deployment into a file according to a specific format. This file with a specific role is the  ",(0,r.jsxs)("strong",{children:[" ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"configuration file"})})," "]})," of the project."]}),"\n",(0,r.jsxs)(n.p,{children:["The SQL extracted in Flink SQL task is put into ",(0,r.jsx)(n.code,{children:"sql.yaml"}),", this file with specific role is the ",(0,r.jsx)(n.code,{children:"sql file"})," of the project."]}),"\n",(0,r.jsx)(n.h2,{id:"configuration-file",children:"Configuration file"}),"\n",(0,r.jsxs)(n.p,{children:["In StreamPark, the configuration file of ",(0,r.jsx)(n.code,{children:"DataStream"})," job and ",(0,r.jsx)(n.code,{children:"Flink Sql"})," are common. In other words, this configuration file can define the configurations of ",(0,r.jsx)(n.code,{children:"DataStream"})," and ",(0,r.jsx)(n.code,{children:"Flink Sql"})," (the configuration file in Flink SQL job is optional). The format of the configuration file must be ",(0,r.jsx)(n.code,{children:"yaml"})," and must meet the requirements of yaml."]}),"\n",(0,r.jsx)(n.p,{children:"How to configure this configuration file and what to pay attention to."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"\nflink:\n  deployment:\n    option:\n      target: application\n      detached:\n      shutdownOnAttachedExit:\n      jobmanager:\n    property: #@see: https://ci.apache.org/projects/flink/flink-docs-release-1.12/deployment/config.html\n      $internal.application.main: org.apache.streampark.flink.quickstart.QuickStartApp\n      pipeline.name:  StreamPark QuickStart App\n      yarn.application.queue:\n      taskmanager.numberOfTaskSlots: 1\n      parallelism.default: 2\n      jobmanager.memory:\n        flink.size:\n        heap.size:\n        jvm-metaspace.size:\n        jvm-overhead.max:\n        off-heap.size:\n        process.size:\n      taskmanager.memory:\n        flink.size:\n        framework.heap.size:\n        framework.off-heap.size:\n        managed.size:\n        process.size:\n        task.heap.size:\n        task.off-heap.size:\n        jvm-metaspace.size:\n        jvm-overhead.max:\n        jvm-overhead.min:\n        managed.fraction: 0.4\n      pipeline:\n        auto-watermark-interval: 200ms\n      # checkpoint\n      execution:\n        checkpointing:\n          mode: EXACTLY_ONCE\n          interval: 30s\n          timeout: 10min\n          unaligned: false\n          externalized-checkpoint-retention: RETAIN_ON_CANCELLATION\n      # state backend\n      state:\n        backend: hashmap # Special note: flink1.12 optional configuration ('jobmanager', 'filesystem', 'rocksdb'), flink1.12+ optional configuration ('hashmap', 'rocksdb'),\n        backend.incremental: true\n        checkpoint-storage: filesystem\n        savepoints.dir: file:///tmp/chkdir\n        checkpoints.dir: file:///tmp/chkdir\n      # restart strategy\n      restart-strategy: fixed-delay  # Restart strategy [(fixed-delay|failure-rate|none) a total of 3 configurable strategies]\n      restart-strategy.fixed-delay:\n        attempts: 3\n        delay: 5000\n      restart-strategy.failure-rate:\n        max-failures-per-interval:\n        failure-rate-interval:\n        delay:\n  # table\n  table:\n    planner: blink # (blink|old|any)\n    mode: streaming #(batch|streaming)\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The above is the complete configuration related to the environment that needs to be paid attention to. These configurations are carried out under the namespace of ",(0,r.jsx)(n.code,{children:"Flink"}),", mainly including two categories."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The configuration under deployment is the configuration related to the project ",(0,r.jsx)(n.code,{children:"deployment"})," (",(0,r.jsx)(n.code,{children:"that is, the configuration parameters related to a series of resources when the application is started"}),")."]}),"\n",(0,r.jsx)(n.li,{children:"Others are the configuration of the environment that needs attention during development."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"There are some configurations related to the environment that need to be paid attention to during development."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"checkpoint"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"watermark"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"state backend"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"restart-strategy"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"table"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"deployment",children:"Deployment"}),"\n",(0,r.jsxs)(n.p,{children:["Deployment related parameters and configuration items are included in ",(0,r.jsx)(n.code,{children:"deployment"}),", including two types:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"option"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"property"})}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"option",children:"option"}),"\n",(0,r.jsxs)(n.p,{children:["The parameters of Flink run are configured under ",(0,r.jsx)(n.code,{children:"option"}),". Currently, the supported parameters are as follows."]}),"\n",(0,r.jsx)(a.dz,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"parallelism"})," (-p) Parallelism does not support configuration in option, you can configure it in property\n",(0,r.jsx)(n.code,{children:"class"})," (-c) The main class of the program does not support configuration in option, you can configure it in property"]}),"\n",(0,r.jsx)(n.admonition,{title:"Attention",type:"info",children:(0,r.jsx)(n.p,{children:"The parameter in option must be a full parameter name"})}),"\n",(0,r.jsx)(n.h4,{id:"property",children:"property"}),"\n",(0,r.jsxs)(n.p,{children:["The parameter under ",(0,r.jsx)(n.code,{children:"property"})," is the parameter under standard parameter - D, including two parts"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Basic parameters"}),"\n",(0,r.jsx)(n.li,{children:"Memory parameters"}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"basic-parameters",children:"Basic parameters"}),"\n",(0,r.jsx)(n.p,{children:"There are many basic parameters. The five most basic parameters are as follows."}),"\n",(0,r.jsx)(a.zS,{}),"\n",(0,r.jsx)(n.admonition,{title:"Attention",type:"info",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"$internal.application.main"})," and ",(0,r.jsx)(n.code,{children:"pipeline.name"})," must be set."]})}),"\n",(0,r.jsxs)(n.p,{children:["If you need to set more parameters, please refer to ",(0,r.jsx)(n.a,{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.12/deployment/config.html",children:(0,r.jsx)(n.code,{children:"here"})}),", These parameters must be placed under the property and the parameter names must be correct. StreamPark will automatically resolve these parameters and take effect."]}),"\n",(0,r.jsx)(n.h5,{id:"memory-parameters",children:"Memory parameters"}),"\n",(0,r.jsx)(n.p,{children:"Memory has many configuration parameters. The common configurations are as follows."}),"\n",(0,r.jsx)(a.By,{}),"\n",(0,r.jsxs)(n.p,{children:["Similarly, if you want to configure more memory parameters, please refer to ",(0,r.jsx)(n.a,{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.12/deployment/memory/mem_setup.html",children:(0,r.jsx)(n.code,{children:"here"})}),". You need to put the memory configuration of ",(0,r.jsx)(n.a,{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.12/deployment/memory/mem_setup.html",children:(0,r.jsx)(n.code,{children:"Flink process memory"})}),", ",(0,r.jsx)(n.a,{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.12/deployment/memory/mem_setup_tm.html",children:(0,r.jsx)(n.code,{children:"jobmanager"})})," and ",(0,r.jsx)(n.a,{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.12/deployment/memory/mem_setup_jobmanager.html",children:(0,r.jsx)(n.code,{children:"taskmanager"})})," in the property to ensure that it takes effect."]}),"\n",(0,r.jsx)(n.h5,{id:"configure-total-memory",children:"Configure Total Memory"}),"\n",(0,r.jsx)(n.p,{children:"The total process memory of Flink JVM processes consists of memory consumed by the Flink application (total Flink memory) and by the JVM to run the process. The total Flink memory consumption includes usage of JVM Heap and Off-heap (Direct or Native) memory."}),"\n",(0,r.jsx)("center",{children:(0,r.jsx)("img",{src:"/doc/image/process_mem_model.svg",width:"340px"})}),"\n",(0,r.jsx)(n.p,{children:"The simplest way to set up memory in Flink is to configure either of the two following options:"}),"\n",(0,r.jsx)(a.d4,{}),"\n",(0,r.jsx)(n.admonition,{title:"Attention",type:"danger",children:(0,r.jsx)(n.p,{children:"Explicitly configuring both total process memory and total Flink memory is not recommended. It may lead to deployment failures due to potential memory configuration conflicts. Configuring other memory components also requires caution as it can produce further configuration conflicts."})}),"\n",(0,r.jsx)(n.h3,{id:"checkpoint",children:"Checkpoint"}),"\n",(0,r.jsx)(n.p,{children:"The configuration of checkpoint is simple. You can configure them as follows:"}),"\n",(0,r.jsx)(a.$z,{}),"\n",(0,r.jsx)(n.h3,{id:"watermark",children:"Watermark"}),"\n",(0,r.jsxs)(n.p,{children:["For ",(0,r.jsx)(n.code,{children:"watermark"})," configuration, you only need to set the generation cycle ",(0,r.jsx)(n.code,{children:"pipeline.auto-watermark-interval"})," of the watermark."]}),"\n",(0,r.jsx)(n.h3,{id:"state",children:"State"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"state:\n  backend: hashmap # Special note: flink1.12 optional configuration ('jobmanager', 'filesystem', 'rocksdb'), flink1.12+ optional configuration ('hashmap', 'rocksdb'),\n  backend.incremental: true\n  checkpoint-storage: filesystem\n  savepoints.dir: file:///tmp/chkdir\n  checkpoints.dir: file:///tmp/chkdir\n"})}),"\n",(0,r.jsx)(n.p,{children:"There are roughly two types:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"backend"}),"\n",(0,r.jsx)(n.li,{children:"checkpoints"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"backend",children:"backend"}),"\n",(0,r.jsxs)(n.p,{children:["The backend is used to set the configuration of the state backend. The configuration of the state backend follows the configuration rules in the ",(0,r.jsx)(n.a,{href:"https://ci.apache.org/projects/flink/flink-docs-release-1.12/ops/state/state_backends.html",children:(0,r.jsx)(n.code,{children:"official website document"})}),". The following configurations are supported:"]}),"\n",(0,r.jsx)(a.cU,{}),"\n",(0,r.jsx)(n.p,{children:"If the save type of backend is rocksdb, you may need to further set the configuration of rocksdb. You can refer to the official website for configuration. It should be noted that the configuration of rocksdb on the official website is prefixed with state.backend, and the current namespace is under state.backend. Note that the parameter name must be correct"}),"\n",(0,r.jsx)(n.admonition,{title:"attention",type:"info",children:(0,r.jsx)(n.p,{children:"The value item is a non-standard configuration. This item is used to set the state saving type (jobmanager | filesystem | rocksdb). Other items are standard configurations and comply with the specifications of the official website."})}),"\n",(0,r.jsx)(n.h3,{id:"restart-strategy",children:"Restart Strategy"}),"\n",(0,r.jsx)(n.p,{children:"There are three restart strategies in Flink, corresponding to the three configurations here, as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"restart-strategy: fixed-delay  # Restart strategy [(fixed-delay|failure-rate|none) a total of 3 configurable strategies]\nrestart-strategy.fixed-delay:\n  attempts: 3\n  delay: 5000\nrestart-strategy.failure-rate:\n  max-failures-per-interval:\n  failure-rate-interval:\n  delay:\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Configure the specific restart strategy under ",(0,r.jsx)(n.code,{children:"restart-strategy"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"fixed-delay"}),"\n",(0,r.jsx)(n.li,{children:"failure-rate"}),"\n",(0,r.jsx)(n.li,{children:"none"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"fixed-delay",children:"fixed-delay"}),"\n",(0,r.jsx)(a.h1,{}),"\n",(0,r.jsxs)(n.admonition,{title:"Example:",type:"tip",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"attempts: 5\ndelay: 3 s\n"})}),(0,r.jsxs)(n.p,{children:["That is to say, the maximum number of failed retries of a task is ",(0,r.jsx)(n.code,{children:"5"}),", and the time interval for each task restart is ",(0,r.jsx)(n.code,{children:"3 seconds"}),". If the number of failed retries reaches ",(0,r.jsx)(n.code,{children:"5"}),", the task will fail and exit."]})]}),"\n",(0,r.jsx)(n.h4,{id:"failure-rate",children:"failure-rate"}),"\n",(0,r.jsx)(a.Mk,{}),"\n",(0,r.jsxs)(n.admonition,{title:"Example",type:"tip",children:[(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:" max-failures-per-interval: 10\n failure-rate-interval: 5 min\n delay: 2 s\n"})}),(0,r.jsxs)(n.p,{children:["That is, the time interval between each abnormal restart is ",(0,r.jsx)(n.code,{children:"2 seconds"}),". If the total number of failures reaches ",(0,r.jsx)(n.code,{children:"10"})," within ",(0,r.jsx)(n.code,{children:"5 minutes"}),", the task fails."]})]}),"\n",(0,r.jsx)(n.h4,{id:"none",children:"None"}),"\n",(0,r.jsx)(n.p,{children:"There is no need to configure task parameters in case of no restart."}),"\n",(0,r.jsx)(n.h4,{id:"unit-suffix",children:"Unit suffix"}),"\n",(0,r.jsxs)(n.p,{children:["Note that the time interval and frequency settings can be set without the unit suffix. If the unit suffix is not included, it will be treated as ",(0,r.jsx)(n.code,{children:"milliseconds"})," by default. The optional units are:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"s    second"}),"\n",(0,r.jsx)(n.li,{children:"m    minute"}),"\n",(0,r.jsx)(n.li,{children:"min  minute"}),"\n",(0,r.jsx)(n.li,{children:"h    hour"}),"\n",(0,r.jsx)(n.li,{children:"d    day"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"table",children:"Table"}),"\n",(0,r.jsxs)(n.p,{children:["Under ",(0,r.jsx)(n.code,{children:"table"})," is the configuration of Flink SQL. The currently supported configuration items and functions are as follows:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"planner"}),"\n",(0,r.jsx)(n.li,{children:"mode"}),"\n",(0,r.jsx)(n.li,{children:"catalog"}),"\n",(0,r.jsx)(n.li,{children:"database"}),"\n"]}),"\n",(0,r.jsx)(a.R1,{}),"\n",(0,r.jsx)(n.h2,{id:"sql-file",children:"Sql file"}),"\n",(0,r.jsx)(n.p,{children:"The SQL file must be in yaml format, and the definition rules of yaml file must be followed. The definition of specific internal SQL format is very simple, as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"sql: |\n  CREATE TABLE datagen (\n    f_sequence INT,\n    f_random INT,\n    f_random_str STRING,\n    ts AS localtimestamp,\n    WATERMARK FOR ts AS ts\n  ) WITH (\n    'connector' = 'datagen',\n    -- optional options --\n    'rows-per-second'='5',\n    'fields.f_sequence.kind'='sequence',\n    'fields.f_sequence.start'='1',\n    'fields.f_sequence.end'='1000',\n    'fields.f_random.min'='1',\n    'fields.f_random.max'='1000',\n    'fields.f_random_str.length'='10'\n  );\n\n  CREATE TABLE print_table (\n    f_sequence INT,\n    f_random INT,\n    f_random_str STRING\n    ) WITH (\n    'connector' = 'print'\n  );\n\n  INSERT INTO print_table select f_sequence,f_random,f_random_str from datagen;\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"sql"})," is the ID of the current SQL and must be unique. The following contents are specific SQL."]}),"\n",(0,r.jsx)(n.admonition,{title:"attention",type:"danger",children:(0,r.jsx)(n.p,{children:"In the above content, | after SQL is required. In addition, | will retain the format of the whole section. StreamPark can directly define multiple SQLs at once. Each SQLs must be separated by semicolons, and each section of SQLs must follow the format and specification specified by Flink SQL."})}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(n.p,{children:"This chapter introduces the specific configuration of configuration files and SQL files in detail. I believe you have a preliminary impression and concept. Please refer to the following chapters for specific use."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},41836:(e,n,t)=>{"use strict";t.d(n,{cU:()=>x,$z:()=>u,Mk:()=>y,h1:()=>j,By:()=>p,dz:()=>m,zS:()=>h,R1:()=>g,d4:()=>f,gA:()=>b,Ys:()=>v});t(30758);const r={option:[{opt:"-t",longOpt:"target",desc:"Deployment mode(only support yarn-per-job,application)",deprecated:!1,value:" yarn-per-job | application "},{opt:"-d",longOpt:"detached",desc:"run as detached mode",deprecated:!1,value:"true | false"},{opt:"-n",longOpt:"allowNonRestoredState",desc:"allow to skip savepoint state that cannot be restored",deprecated:!1,value:"true | false"},{opt:"-sae",longOpt:"shutdownOnAttachedExit",desc:"If the job is submitted in attached, when job cancel close cluster",deprecated:!1,value:"true | false"},{opt:"-m",longOpt:"jobmanager",desc:"Address of the JobManager to which to connect",deprecated:!1,value:"yarn-cluster | address"},{opt:"-p",longOpt:"parallelism",desc:"Program parallelism",deprecated:!0,value:"int"},{opt:"-c",longOpt:"class",desc:'Class with the program entry point ("main()" method)',deprecated:!0,value:"String"}],property:[{name:"$internal.application.main",desc:'Class with the program entry point ("main()" method)',required:!0},{name:"pipeline.name",desc:"Job name",required:!0},{name:"yarn.application.queue",desc:"YARN queue",required:!1},{name:"taskmanager.numberOfTaskSlots",desc:"Taskmanager slot number",required:!1},{name:"parallelism.default",desc:"Program parallelism",required:!1}],memory:[{group:"JM heap Memory",name:"jobmanager.memory.heap.size",desc:"JVM Heap Memory size for JobManager. The minimum recommended JVM Heap size is 128.000mb (134217728 bytes)."},{group:"JM Off-heap Memory",name:"jobmanager.memory.off-heap.size",desc:"Off-heap Memory size for JobManager. This option covers all off-heap memory usage including direct and native memory allocation. The JVM direct memory limit of the JobManager process (-XX:MaxDirectMemorySize) will be set to this value if the limit is enabled by jobmanager.memory.enable-jvm-direct-memory-limit"},{group:"JVM Metaspace",name:"jobmanager.memory.jvm-metaspace.size",desc:"JVM Metaspace Size for the JobManager."},{group:"JVM Size",name:"jobmanager.memory.jvm-overhead.min",desc:"Min JVM Overhead size for the JobManager. This is off-heap memory reserved for JVM overhead, such as thread stack space, compile cache, etc. This includes native memory but not direct memory, and will not be counted when Flink calculates JVM max direct memory size parameter. The size of JVM Overhead is derived to make up the configured fraction of the Total Process Memory. If the derived size is less or greater than the configured min or max size, the min or max size will be used. The exact size of JVM Overhead can be explicitly specified by setting the min and max size to the same value."},{group:"JVM Size",name:"jobmanager.memory.jvm-overhead.max",desc:"Max JVM Overhead size for the JobManager. This is off-heap memory reserved for JVM overhead, such as thread stack space, compile cache, etc. This includes native memory but not direct memory, and will not be counted when Flink calculates JVM max direct memory size parameter. The size of JVM Overhead is derived to make up the configured fraction of the Total Process Memory. If the derived size is less or greater than the configured min or max size, the min or max size will be used. The exact size of JVM Overhead can be explicitly specified by setting the min and max size to the same value."},{group:"JVM Size",name:"jobmanager.memory.jvm-overhead.fraction",desc:"Fraction of Total Process Memory to be reserved for JVM Overhead. This is off-heap memory reserved for JVM overhead, such as thread stack space, compile cache, etc. This includes native memory but not direct memory, and will not be counted when Flink calculates JVM max direct memory size parameter. The size of JVM Overhead is derived to make up the configured fraction of the Total Process Memory. If the derived size is less or greater than the configured min or max size, the min or max size will be used. The exact size of JVM Overhead can be explicitly specified by setting the min and max size to the same value."},{group:"Framework Heap Memory",name:"taskmanager.memory.framework.heap.size",desc:"Framework Heap Memory size for TaskExecutors. This is the size of JVM heap memory reserved for TaskExecutor framework, which will not be allocated to task slots."},{group:"Task Heap Memory",name:"taskmanager.memory.task.heap.size",desc:"Task Heap Memory size for TaskExecutors. This is the size of JVM heap memory reserved for tasks. If not specified, it will be derived as Total Flink Memory minus Framework Heap Memory, Framework Off-Heap Memory, Task Off-Heap Memory, Managed Memory and Network Memory."},{group:"Managed memory",name:"taskmanager.memory.managed.size",desc:"Managed Memory size for TaskExecutors. This is the size of off-heap memory managed by the memory manager, reserved for sorting, hash tables, caching of intermediate results and RocksDB state backend. Memory consumers can either allocate memory from the memory manager in the form of MemorySegments, or reserve bytes from the memory manager and keep their memory usage within that boundary. If unspecified, it will be derived to make up the configured fraction of the Total Flink Memory."},{group:"Managed memory",name:"taskmanager.memory.managed.fraction",desc:"Fraction of Total Flink Memory to be used as Managed Memory, if Managed Memory size is not explicitly specified."},{group:"Framework off-heap memory",name:"taskmanager.memory.framework.off-heap.size",desc:"Framework Off-Heap Memory size for TaskExecutors. This is the size of off-heap memory (JVM direct memory and native memory) reserved for TaskExecutor framework, which will not be allocated to task slots. The configured value will be fully counted when Flink calculates the JVM max direct memory size parameter."},{group:"Taskmanager off-heap memory",name:"taskmanager.memory.task.off-heap.size",desc:"Task Off-Heap Memory size for TaskExecutors. This is the size of off heap memory (JVM direct memory and native memory) reserved for tasks. The configured value will be fully counted when Flink calculates the JVM max direct memory size parameter."},{group:"JVM Metaspace",name:"taskmanager.memory.jvm-metaspace.size",desc:"JVM Metaspace Size for the TaskExecutors."}],totalMem:[{group:"Flink total memory",tm:"taskmanager.memory.flink.size",jm:"jobmanager.memory.flink.size"},{group:"Flink process total memory",tm:"taskmanager.memory.process.size",jm:"jobmanager.memory.process.size"}],checkpoints:[{name:"execution.checkpointing.interval",desc:"Interval period of checkpoint",value:"Duration"},{name:"execution.checkpointing.timeout",desc:"timeout",value:"Duration"},{name:"execution.checkpointing.mode",desc:"semantics",value:" EXACTLY_ONCE | AT_LEAST_ONCE "},{name:"execution.checkpointing.unaligned",desc:"unaligned",value:"true | false"}],backend:[{name:"state.backend",desc:"Type of backend storage",value:"hashmap | rocksdb",mode:""},{name:"state.checkpoint-storage",desc:"The checkpoint storage implementation to be used to checkpoint state.",value:"jobmanager | filesystem ",mode:""},{name:"state.backend.incremental",desc:"Whether to enable increment",value:" true | false",mode:"rocksdb"}],fixedDelay:[{name:"attempts",desc:"Number of Flink attempts to restart",value:"3"},{name:"delay",desc:"Specify how long to restart after the task fails",value:"none | s | m | min | h | d"}],failureRate:[{name:"max-failures-per-interval",desc:"Maximum number of restarts in given time interval before failing a job",value:"3"},{name:"failure-rate-interval",desc:"Time interval for measuring failure",value:"None | s | m | min | h | d"},{name:"delay",desc:"Delay between two consecutive restart attempts",value:"None | s | m | min | h | d"}],tables:[{name:"planner",desc:"Table Planner",value:"blink | old | any"},{name:"mode",desc:"Table Mode",value:"streaming | batch"},{name:"catalog",desc:"Catalog,Specifies that the will be used during initialization",value:""},{name:"database",desc:"Database,Specifies that the will be used during initialization",value:""}],deploymentEnvs:[{name:"OS",version:"Linux",required:!0,other:"UnSupport Windows"},{name:"JAVA",version:"1.8+",required:!0,other:null},{name:"MySQL",version:"5.6+",required:!0,other:null},{name:"Flink",version:"1.12.0+",required:!0,other:"Flink version >= 1.12"},{name:"Hadoop",version:"2+",required:!1,other:"Optional, If on yarn, hadoop envs is required."}],developmentEnvs:[{name:"OS",version:"Linux",required:!1,other:"Supports Windows, recommended to use Mac/Linux."},{name:"IDE",version:"Intellij IDEA",required:!1,other:"Recommended to use Intellij IDEA"},{name:"JAVA",version:"1.8 +",required:!0,other:null},{name:"Scala",version:"2.12.x",required:!0,other:"install scala-plugin in Intellij IDEA"},{name:"Nodejs",version:"16.14.x ~ 18",required:!0,other:"https://nodejs.org"},{name:"pnpm",version:"7.11.2",required:!0,other:"npm install -g pnpm"},{name:"Flink",version:"1.12.0 +",required:!0,other:"Flink >= 1.12, just download and unpack it."},{name:"MySQL",version:"5.6 +",required:!1,other:null},{name:"Hadoop",version:"2 +",required:!1,other:"Optional, If on yarn, hadoop envs is required."}]};let i=null,a=0;function o(e){i||(i=window.document.createElement("div"),i.setAttribute("class","cpt-toast-wrapper"),window.document.body.append(i));let n=""+Date.now()+a++,t=window.document.createElement("div");t.setAttribute("id",n),t.innerHTML=`<div class="cpt-toast"><span class="${e.icon}">${e.msg}</span></div>`,i.append(t),setTimeout((()=>{window.document.getElementById(n).remove()}),e.time||1e3)}const s={success(e,n){o({msg:e,time:n,icon:"success"})},error(e,n){o({msg:e,time:n,icon:"error"})},info(e,n){o({msg:e,time:n,icon:"info"})}};var l=t(69482),c=t(86070);const d=()=>{s.success("Copy succeeded \ud83c\udf89")},m=()=>(0,c.jsx)("div",{children:(0,c.jsxs)("table",{className:"table-data",style:{width:"100%",display:"inline-table"},children:[(0,c.jsx)("thead",{children:(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{style:{width:"80px"},children:"Short Param"}),(0,c.jsx)("td",{children:'Full Param(prefix"--")'}),(0,c.jsx)("td",{style:{width:"60px"},children:"Effective"}),(0,c.jsx)("td",{children:"Value & Type"}),(0,c.jsx)("td",{children:"Description"})]})}),(0,c.jsx)("tbody",{children:r.option.map(((e,n)=>(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:e.opt}),(0,c.jsx)("td",{children:e.longOpt}),(0,c.jsx)("td",{children:e.deprecated?(0,c.jsx)("span",{className:"icon-times"}):(0,c.jsx)("span",{className:"icon-check"})}),(0,c.jsx)("td",{children:e.value}),(0,c.jsx)("td",{children:e.desc})]},n)))})]})}),h=()=>(0,c.jsx)("div",{children:(0,c.jsxs)("table",{className:"table-data",style:{width:"100%",display:"inline-table"},children:[(0,c.jsx)("thead",{children:(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:"Key"}),(0,c.jsx)("td",{children:"Description"}),(0,c.jsx)("td",{children:"Required"})]})}),(0,c.jsx)("tbody",{children:r.property.map(((e,n)=>(0,c.jsxs)("tr",{children:[(0,c.jsxs)("td",{children:[(0,c.jsx)("span",{className:"label-info",children:e.name}),(0,c.jsx)(l.CopyToClipboard,{text:e.name,onCopy:()=>d(),children:(0,c.jsx)("i",{className:"icon-copy"})})]}),(0,c.jsx)("td",{children:e.desc}),(0,c.jsx)("td",{children:e.required?(0,c.jsx)("span",{className:"icon-toggle-on",title:"Required"}):(0,c.jsx)("span",{className:"icon-toggle-off",title:"Optional"})})]},n)))})]})}),p=()=>(0,c.jsx)("div",{children:(0,c.jsxs)("table",{className:"table-data",style:{width:"100%",display:"inline-table"},children:[(0,c.jsx)("thead",{children:(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{style:{width:"380px"},children:"Key"}),(0,c.jsx)("td",{children:"Description"})]})}),(0,c.jsx)("tbody",{children:r.memory.map(((e,n)=>(0,c.jsxs)("tr",{children:[(0,c.jsxs)("td",{children:[(0,c.jsx)("span",{className:"label-info",children:e.name}),(0,c.jsx)(l.CopyToClipboard,{text:e.name,onCopy:()=>d(),children:(0,c.jsx)("i",{className:"icon-copy"})})]}),(0,c.jsx)("td",{children:e.desc})]},n)))})]})}),f=()=>(0,c.jsx)("div",{children:(0,c.jsxs)("table",{className:"table-data",style:{width:"100%",display:"inline-table"},children:[(0,c.jsx)("thead",{children:(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:"Item"}),(0,c.jsx)("td",{children:"TaskManager Config"}),(0,c.jsx)("td",{children:"JobManager Config"})]})}),(0,c.jsx)("tbody",{children:r.totalMem.map(((e,n)=>(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:e.group}),(0,c.jsxs)("td",{children:[(0,c.jsx)("span",{className:"label-info",children:e.tm}),(0,c.jsx)(l.CopyToClipboard,{text:e.tm,onCopy:()=>d(),children:(0,c.jsx)("i",{className:"icon-copy"})})]}),(0,c.jsxs)("td",{children:[(0,c.jsx)("span",{className:"label-info",children:e.jm}),(0,c.jsx)(l.CopyToClipboard,{text:e.jm,onCopy:()=>d(),children:(0,c.jsx)("i",{className:"icon-copy"})})]})]},n)))})]})}),u=()=>(0,c.jsx)("div",{children:(0,c.jsxs)("table",{className:"table-data",style:{width:"100%",display:"inline-table"},children:[(0,c.jsx)("thead",{children:(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:"Item"}),(0,c.jsx)("td",{children:"Description"}),(0,c.jsx)("td",{children:"Value | Type"})]})}),(0,c.jsx)("tbody",{children:r.checkpoints.map(((e,n)=>(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:e.name}),(0,c.jsx)("td",{children:e.desc}),(0,c.jsx)("td",{children:e.value})]},n)))})]})}),x=()=>(0,c.jsx)("div",{children:(0,c.jsxs)("table",{className:"table-data",style:{width:"100%",display:"inline-table"},children:[(0,c.jsx)("thead",{children:(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:"Item"}),(0,c.jsx)("td",{children:"Description"}),(0,c.jsx)("td",{children:"Value | Type"}),(0,c.jsx)("td",{children:"Effective rules"})]})}),(0,c.jsx)("tbody",{children:r.backend.map(((e,n)=>(0,c.jsxs)("tr",{children:[(0,c.jsxs)("td",{children:[(0,c.jsx)("span",{className:"label-info",children:e.name}),(0,c.jsx)(l.CopyToClipboard,{text:e.name,onCopy:()=>d(),children:(0,c.jsx)("i",{className:"icon-copy"})})]}),(0,c.jsx)("td",{children:e.desc}),(0,c.jsx)("td",{children:e.value}),(0,c.jsx)("td",{children:e.mode})]},n)))})]})}),j=()=>(0,c.jsx)("div",{children:(0,c.jsxs)("table",{className:"table-data",style:{width:"100%",display:"inline-table"},children:[(0,c.jsx)("thead",{children:(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:"Item"}),(0,c.jsx)("td",{children:"Description"}),(0,c.jsx)("td",{children:"Value | Unit"})]})}),(0,c.jsx)("tbody",{children:r.fixedDelay.map(((e,n)=>(0,c.jsxs)("tr",{children:[(0,c.jsxs)("td",{children:[(0,c.jsx)("span",{className:"label-info",children:e.name}),(0,c.jsx)(l.CopyToClipboard,{text:e.name,onCopy:()=>d(),children:(0,c.jsx)("i",{className:"icon-copy"})})]}),(0,c.jsx)("td",{children:e.desc}),(0,c.jsx)("td",{children:e.value})]},n)))})]})}),y=()=>(0,c.jsx)("div",{children:(0,c.jsxs)("table",{className:"table-data",style:{width:"100%",display:"inline-table"},children:[(0,c.jsx)("thead",{children:(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:"Item"}),(0,c.jsx)("td",{children:"Description"}),(0,c.jsx)("td",{children:"Value | Unit"})]})}),(0,c.jsx)("tbody",{children:r.failureRate.map(((e,n)=>(0,c.jsxs)("tr",{children:[(0,c.jsxs)("td",{children:[(0,c.jsx)("span",{className:"label-info",children:e.name}),(0,c.jsx)(l.CopyToClipboard,{text:e.name,onCopy:()=>d(),children:(0,c.jsx)("i",{className:"icon-copy"})})]}),(0,c.jsx)("td",{children:e.desc}),(0,c.jsx)("td",{children:e.value})]},n)))})]})}),g=()=>(0,c.jsx)("div",{children:(0,c.jsxs)("table",{className:"table-data",style:{width:"100%",display:"inline-table"},children:[(0,c.jsx)("thead",{children:(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:"Item"}),(0,c.jsx)("td",{children:"Description"}),(0,c.jsx)("td",{children:"Value"})]})}),(0,c.jsx)("tbody",{children:r.tables.map(((e,n)=>(0,c.jsxs)("tr",{children:[(0,c.jsxs)("td",{children:[(0,c.jsx)("span",{className:"label-info",children:e.name}),(0,c.jsx)(l.CopyToClipboard,{text:e.name,onCopy:()=>d(),children:(0,c.jsx)("i",{className:"icon-copy"})})]}),(0,c.jsx)("td",{children:e.desc}),(0,c.jsx)("td",{children:e.value})]},n)))})]})}),b=()=>(0,c.jsx)("div",{children:(0,c.jsxs)("table",{className:"table-data",style:{width:"100%",display:"inline-table"},children:[(0,c.jsx)("thead",{children:(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:"Item"}),(0,c.jsx)("td",{children:"Version"}),(0,c.jsx)("td",{children:"Required"}),(0,c.jsx)("td",{children:"Other"})]})}),(0,c.jsx)("tbody",{children:r.deploymentEnvs.map(((e,n)=>(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:(0,c.jsx)("span",{className:"label-info",children:e.name})}),(0,c.jsx)("td",{children:e.version}),(0,c.jsx)("td",{children:e.required?(0,c.jsx)("span",{className:"icon-toggle-on",title:"Required"}):(0,c.jsx)("span",{className:"icon-toggle-off",title:"Optional"})}),(0,c.jsx)("td",{children:e.other})]},n)))})]})}),v=()=>(0,c.jsx)("div",{children:(0,c.jsxs)("table",{className:"table-data",style:{width:"100%",display:"inline-table"},children:[(0,c.jsx)("thead",{children:(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:"Item"}),(0,c.jsx)("td",{children:"Version"}),(0,c.jsx)("td",{children:"Required"}),(0,c.jsx)("td",{children:"Other"})]})}),(0,c.jsx)("tbody",{children:r.developmentEnvs.map(((e,n)=>(0,c.jsxs)("tr",{children:[(0,c.jsx)("td",{children:(0,c.jsx)("span",{className:"label-info",children:e.name})}),(0,c.jsx)("td",{children:e.version}),(0,c.jsx)("td",{children:e.required?(0,c.jsx)("span",{className:"icon-toggle-on",title:"Required"}):(0,c.jsx)("span",{className:"icon-toggle-off",title:"Optional"})}),(0,c.jsx)("td",{children:e.other})]},n)))})]})})},83042:(e,n,t)=>{"use strict";var r=t(35664),i={"text/plain":"Text","text/html":"Url",default:"Text"};e.exports=function(e,n){var t,a,o,s,l,c,d=!1;n||(n={}),t=n.debug||!1;try{if(o=r(),s=document.createRange(),l=document.getSelection(),(c=document.createElement("span")).textContent=e,c.ariaHidden="true",c.style.all="unset",c.style.position="fixed",c.style.top=0,c.style.clip="rect(0, 0, 0, 0)",c.style.whiteSpace="pre",c.style.webkitUserSelect="text",c.style.MozUserSelect="text",c.style.msUserSelect="text",c.style.userSelect="text",c.addEventListener("copy",(function(r){if(r.stopPropagation(),n.format)if(r.preventDefault(),void 0===r.clipboardData){t&&console.warn("unable to use e.clipboardData"),t&&console.warn("trying IE specific stuff"),window.clipboardData.clearData();var a=i[n.format]||i.default;window.clipboardData.setData(a,e)}else r.clipboardData.clearData(),r.clipboardData.setData(n.format,e);n.onCopy&&(r.preventDefault(),n.onCopy(r.clipboardData))})),document.body.appendChild(c),s.selectNodeContents(c),l.addRange(s),!document.execCommand("copy"))throw new Error("copy command was unsuccessful");d=!0}catch(m){t&&console.error("unable to copy using execCommand: ",m),t&&console.warn("trying IE specific stuff");try{window.clipboardData.setData(n.format||"text",e),n.onCopy&&n.onCopy(window.clipboardData),d=!0}catch(m){t&&console.error("unable to copy using clipboardData: ",m),t&&console.error("falling back to prompt"),a=function(e){var n=(/mac os x/i.test(navigator.userAgent)?"\u2318":"Ctrl")+"+C";return e.replace(/#{\s*key\s*}/g,n)}("message"in n?n.message:"Copy to clipboard: #{key}, Enter"),window.prompt(a,e)}}finally{l&&("function"==typeof l.removeRange?l.removeRange(s):l.removeAllRanges()),c&&document.body.removeChild(c),o()}return d}},26561:(e,n,t)=>{"use strict";function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}Object.defineProperty(n,"__esModule",{value:!0}),n.CopyToClipboard=void 0;var i=s(t(30758)),a=s(t(83042)),o=["text","onCopy","options","children"];function s(e){return e&&e.__esModule?e:{default:e}}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){x(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}function m(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(e,n){return h=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e},h(e,n)}function p(e){var n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,i=u(e);if(n){var a=u(this).constructor;t=Reflect.construct(i,arguments,a)}else t=i.apply(this,arguments);return function(e,n){if(n&&("object"===r(n)||"function"==typeof n))return n;if(void 0!==n)throw new TypeError("Derived constructors may only return object or undefined");return f(e)}(this,t)}}function f(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}function x(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var j=function(e){!function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),n&&h(e,n)}(l,e);var n,t,r,s=p(l);function l(){var e;!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,l);for(var n=arguments.length,t=new Array(n),r=0;r<n;r++)t[r]=arguments[r];return x(f(e=s.call.apply(s,[this].concat(t))),"onClick",(function(n){var t=e.props,r=t.text,o=t.onCopy,s=t.children,l=t.options,c=i.default.Children.only(s),d=(0,a.default)(r,l);o&&o(r,d),c&&c.props&&"function"==typeof c.props.onClick&&c.props.onClick(n)})),e}return n=l,(t=[{key:"render",value:function(){var e=this.props,n=(e.text,e.onCopy,e.options,e.children),t=d(e,o),r=i.default.Children.only(n);return i.default.cloneElement(r,c(c({},t),{},{onClick:this.onClick}))}}])&&m(n.prototype,t),r&&m(n,r),Object.defineProperty(n,"prototype",{writable:!1}),l}(i.default.PureComponent);n.CopyToClipboard=j,x(j,"defaultProps",{onCopy:void 0,options:void 0})},69482:(e,n,t)=>{"use strict";var r=t(26561).CopyToClipboard;r.CopyToClipboard=r,e.exports=r},35664:e=>{e.exports=function(){var e=document.getSelection();if(!e.rangeCount)return function(){};for(var n=document.activeElement,t=[],r=0;r<e.rangeCount;r++)t.push(e.getRangeAt(r));switch(n.tagName.toUpperCase()){case"INPUT":case"TEXTAREA":n.blur();break;default:n=null}return e.removeAllRanges(),function(){"Caret"===e.type&&e.removeAllRanges(),e.rangeCount||t.forEach((function(n){e.addRange(n)})),n&&n.focus()}}},94325:(e,n,t)=>{"use strict";t.d(n,{A:()=>r});const r=t.p+"assets/images/process_steps-602d682d0f781a6178e3793ed9e434e7.png"},76113:(e,n,t)=>{"use strict";t.d(n,{R:()=>o,x:()=>s});var r=t(30758);const i={},a=r.createContext(i);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);